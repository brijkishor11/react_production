{"version":3,"sources":["images/amul_ghee.jpg","images/fortune_rice.jpg","images/mother_dairy.jpg","images/patanjali_shampoo.jpg","Modal.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Modal","id","className","onClick","this","props","completeTransactio","style","color","React","Component","App","state","productList","brandName","productName","quantity","price","mrp","imageUrl","mother_dairy","offerText","fortune_rice","amul_ghee","patanjali_shampoo","total","isModal","timer","addItem","value","index","that","newPrice","document","getElementById","innerHTML","totalItems","removeItem","numOfItems","totalPrice","map","setState","checkoutItems","flag","key","styles","container","flex","alt","src","height","width","fontSize","subcontainer","fontWeight","display","margin","padding","textAlign","flexDirection","background","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acee2cf1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/amul_ghee.8315e9a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fortune_rice.c8cb1af3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mother_dairy.63169206.jpg\";","module.exports = __webpack_public_path__ + \"static/media/patanjali_shampoo.eecf1cad.jpg\";","import React from \"react\";\n\nclass Modal extends React.Component {\n\n    render() {\n        return (\n          <div>\n            <div id=\"myModal\" className=\"modal\">\n              <div className=\"modal-content\">\n                <span onClick={this.props.completeTransactio} className=\"close\">&times;</span>\n                <h2 style={{color: 'green'}}>Transaction Successful!</h2>\n              </div>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Modal;","import React from 'react';\n\n//import component\nimport Modal from \"./Modal\";\n\n//import product's images\nimport amul_ghee from \"./images/amul_ghee.jpg\";\nimport fortune_rice from \"./images/fortune_rice.jpg\";\nimport mother_dairy from \"./images/mother_dairy.jpg\";\nimport patanjali_shampoo from \"./images/patanjali_shampoo.jpg\";\n\n//import css file for styling\nimport './App.css';\n\nclass App extends React.Component {\n\n    state  = {\n      productList: [\n        {brandName: \"Milkfood\", productName: \"Milfood Rich Desi Danedar Ghee (Carton)\", quantity: 0, price: 408, mrp: 498, imageUrl: mother_dairy, offerText: 18},\n        {brandName: \"Grofers\", productName: \"Grofers Mother's Choice Desi Ghee\", quantity: 0, price: 414, mrp: 450, imageUrl: fortune_rice, offerText: 8},\n        {brandName: \"Amul\", productName: \"Amul Pure Ghee (Carton)\", quantity: 0, price: 439, mrp: 460, imageUrl: amul_ghee, offerText: 4.5},\n        {brandName: \"Patanjali\", productName: \"Patanjali Shudh Desi Ghee (Carton)\", quantity: 0, price: 405, mrp: 450, imageUrl: patanjali_shampoo, offerText: 10}\n      ],\n      quantity: 0,\n      total: 0,\n      isModal: false,\n      timer: null\n    }\n\n  addItem = (value, index) => {\n    let that = this;\n    if (value.quantity >= 0) {\n      value.quantity = value.quantity + 1;\n      let newPrice = value.quantity * value.price;\n      value.newPrice = newPrice;\n      document.getElementById(index).innerHTML = value.quantity;\n      document.getElementById(\n        \"item_\" + index\n      ).innerHTML = `<b>RS ${newPrice}</b>`;\n    }\n    that.totalItems();\n  };\n\n  removeItem = (value, index) => {\n    let that = this;\n    if (value.quantity > 0) {\n      value.quantity = value.quantity - 1;\n      if (value.quantity !== 0) {\n        let newPrice = value.quantity * value.price;\n        value.newPrice = newPrice;\n        document.getElementById(\n          \"item_\" + index\n        ).innerHTML = `<b>RS ${newPrice}</b>`;\n      }\n      document.getElementById(index).innerHTML = value.quantity;\n      that.totalItems();\n    }\n  };\n\n  totalItems = () => {\n    let that = this;\n    let numOfItems = 0,\n      totalPrice = 0;\n    that.state.productList.map((value, index) => {\n      numOfItems += value.quantity;\n      if (value.quantity > 0) totalPrice += value.newPrice;\n    });\n    that.setState({ quantity: numOfItems, total: totalPrice });\n  };\n\n  checkoutItems = flag => {\n    let that = this;\n    that.setState({ isModal: flag });\n  };\n\n  render() {\n    let that = this;\n    return (\n      <div className=\"App\">\n        {!that.state.isModal &&\n          that.state.productList.map((value, index) => {\n            return (\n              <div key={index} style={styles.container}>\n                <div style={{ flex: 0.2 }}>\n                  <img\n                    alt=\"no\"\n                    src={value.imageUrl}\n                    height=\"140px\"\n                    width=\"60%\"\n                  />\n                  <p style={{ fontSize: 18 }}>{`${value.offerText}% OFF`}</p>\n                </div>\n\n                <div style={{ flex: 0.8 }}>\n                  <div style={styles.subcontainer}>\n                    <div\n                      style={{\n                        color: \"green\",\n                        fontWeight: \"bold\",\n                        fontSize: 23\n                      }}\n                    >\n                      {value.brandName}\n                    </div>\n                    <div>{value.productName}</div>\n                    <div>1 |</div>\n                    <div>MRP {value.mrp}</div>\n                    <div id={`item_${index}`}>\n                      <b>RS {value.price}</b>\n                    </div>\n                    <div style={{ display: \"flex\" }}>\n                      <button\n                        className=\"button cart\"\n                        onClick={() => this.addItem(value, index)}\n                      >\n                        ADD CART\n                      </button>\n                      <button\n                        className=\"button icon\"\n                        onClick={() => this.addItem(value, index)}\n                      >\n                        +\n                      </button>\n                      <div id={index} style={{ margin: \"15px\" }}>\n                        {value.quantity}\n                      </div>\n                      <button\n                        className=\"button icon\"\n                        onClick={() => this.removeItem(value, index)}\n                      >\n                        -\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        {!that.state.isModal && (\n          <footer className=\"footer\">\n            <div style={{ flex: 0.8 }}>\n              <div className=\"foot-container\">Qty:{that.state.quantity}</div>\n              <div className=\"foot-container\" onClick={this.totalItems}>\n                Total:{that.state.total}\n              </div>\n            </div>\n            <div style={{ flex: 0.2 }}>\n              <button\n                className=\"button checkout\"\n                onClick={() => this.checkoutItems(true)}\n              >\n                CHECKOUT\n              </button>\n            </div>\n          </footer>\n        )}\n        {this.state.isModal && (\n          <Modal completeTransactio={() => this.checkoutItems(false)} />\n        )}\n      </div>\n    );\n  }\n}\n\n\nconst styles = {\n  container: {\n    display: 'flex',\n    padding: 12,\n    textAlign: \"center\",\n\n  },\n\n  subcontainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    background: '#0000',\n    textAlign: 'left',\n    padding: 5\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}